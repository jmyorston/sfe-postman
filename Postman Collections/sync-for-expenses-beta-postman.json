{
	"info": {
		"_postman_id": "dc645638-25e5-4665-88a0-cac9b4cbab91",
		"name": "Sync For Expenses Beta",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Sync For Expenses Beta",
			"item": [
				{
					"name": "Company Auth",
					"item": [
						{
							"name": "Create Company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody)\r",
											"\r",
											"// stores the accounting connection as a collection variable\r",
											"pm.collectionVariables.set(\"accountingConnectionId\", resp.dataConnections[0].id)\r",
											"pm.collectionVariables.set(\"companyId\", resp.id)\r",
											""
										],
										"type": "text/javascript",
										"id": "b01e08b5-f002-47db-9e5c-383ea5a28789"
									}
								}
							],
							"id": "87996bfc-31ea-4f2c-9df4-8051aaf278af",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{$randomCompanyName}}\",\r\n  \"platformType\": \"qhyg\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}companies",
								"description": "Company creation should occur the moment an SMB of yours initiates the process to connect their accounting software.\n\n- Populate the name value with the ID that you use for the company in your internal system so that itâ€™s easier to identify the Codat company that corresponds to your record of the merchant.\n- You can specify which accounting package they are using through the `platformKey` e.g. `gbol` for Xero and `qhyg` for QuickBooks Online\n- Retain the `companyId` (hereafter referred to as companyId) from the response. It is crucial that you retain this value as you will need it for directing your customers to Link and managing their connections.\n- [Subscribe to an alert](https://docs.codat.io/docs/core-rules-create) for new company connections or use a [redirect parameter](https://docs.codat.io/docs/authentication-redirect#redirect-with-reserved-query-parameters) such as the status code to listen for a successful connection for the company once the user has been successfully authenticated.\n    \n\nYou can read a guide on how to create a Codat company [here](https://docs.codat.io/docs/build-your-own-authentication-journey#step-1-create-a-codat-company-when-a-user-signs-up-to-your-app)."
							},
							"response": []
						},
						{
							"name": "Create partnerExpense Connection",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody)\r",
											"\r",
											"// stores the accounting connection as a collection variable\r",
											"pm.collectionVariables.set(\"expenseConnectionId\", resp.id)"
										],
										"type": "text/javascript",
										"id": "ae1f64d9-6e61-499b-b0fb-36a35e0873b4"
									}
								}
							],
							"id": "0c451e64-5ed5-4b87-8541-d1c593363ed8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{expenseUrl}}companies/:companyId/connections/partnerexpense",
									"host": [
										"{{expenseUrl}}companies"
									],
									"path": [
										":companyId",
										"connections",
										"partnerexpense"
									],
									"variable": [
										{
											"id": "676bb613-090f-4b38-897b-38ce3102b964",
											"key": "companyId",
											"value": "{{companyId}}"
										}
									]
								},
								"description": "The `partnerExpense` connection allows you to push `expense-transaction` datasets to Codat in a standardised way."
							},
							"response": []
						},
						{
							"name": "Get Connections",
							"id": "9f87d73b-bd8c-44f4-8317-41823cfa6e43",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}companies/:companyId",
									"host": [
										"{{baseUrl}}companies"
									],
									"path": [
										":companyId"
									],
									"variable": [
										{
											"key": "companyId",
											"value": "{{companyId}}"
										}
									]
								},
								"description": "If at anypoint you want to see the status of the dataConnections e.g. to ensure your company is still linked before sending data - you can make a request to the dataConnections object.\n\nYou can also subscribe to the webhook rule `DataConnectionStatusChanged` to receive alerts when a company disconnects."
							},
							"response": []
						}
					],
					"id": "aedd3da2-5454-4b08-b4c7-cf01b61f587f",
					"description": "StartFragment\n\nIn Codat, a company represents a business sharing access to their data. Each company can have multiple data connections to different data sources. For example, a business can have one connection to Xero for accounting data and a connection to Plaid for Open banking data.\n\nStartFragment\n\nWith Sync for Expenses each company will have two data connections:\n\n- One will be to their accounting platform\n- The other will be to the partner expense integration\n    \n\n<img src=\"https://content.pstmn.io/b962c926-31c5-4af0-8915-b665d7451480/aW1hZ2UucG5n\" alt=\"\" height=\"406\" width=\"504\">"
				},
				{
					"name": "Config & Mapping",
					"item": [
						{
							"name": "Get Configuration",
							"id": "4715022b-aa2e-4d5f-a3a7-10fffc52c557",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{expenseUrl}}companies/:companyId/config",
									"host": [
										"{{expenseUrl}}companies"
									],
									"path": [
										":companyId",
										"config"
									],
									"variable": [
										{
											"id": "17a833ad-f53d-4a24-96fa-aa717dc64f60",
											"key": "companyId",
											"value": "{{companyId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Customers",
							"id": "c724c120-a380-4c5e-a43b-afac860b8710",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}companies/:companyId/data/customers?query=metadata.isDeleted=false",
									"host": [
										"{{baseUrl}}companies"
									],
									"path": [
										":companyId",
										"data",
										"customers"
									],
									"query": [
										{
											"key": "query",
											"value": "metadata.isDeleted=false"
										}
									],
									"variable": [
										{
											"key": "companyId",
											"value": "{{companyId}}"
										}
									]
								},
								"description": "A `customerId` is required in the config to associate all income related activities against.\n\nYou can use this request to retreive a list of available customers from your customers accounting software you can also add additional query parameters e.g.\n\n- `query=metadata.isDeleted=false&&customerName={customerName}`"
							},
							"response": []
						},
						{
							"name": "Create Customer",
							"id": "29fa9e54-af49-400d-8c58-3d53ee8cad7c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"customerName\": \"{{$randomCompanyName}}\",\r\n  \"contactName\": \"{{$randomFirstName}}\",\r\n  \"emailAddress\": \"{{$randomEmail}}\",\r\n  \"phone\": \"{{$randomPhoneNumber}}\",\r\n  \"registrationNumber\": \"string\",\r\n  \"taxNumber\": \"string\",\r\n  \"status\": \"Active\",\r\n  \"modifiedDate\": \"{{$isoTimestamp}}\",\r\n  \"sourceModifiedDate\": \"{{$isoTimestamp}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}companies/:companyId/connections/:connectionId/push/customers",
									"host": [
										"{{baseUrl}}companies"
									],
									"path": [
										":companyId",
										"connections",
										":connectionId",
										"push",
										"customers"
									],
									"variable": [
										{
											"id": "7f549cc4-c22b-40b9-bdea-93a41b8fa1d2",
											"key": "companyId",
											"value": "{{companyId}}"
										},
										{
											"id": "2827c904-6011-4d40-9b54-d79e73559467",
											"key": "connectionId",
											"value": "{{accountingConnectionId}}"
										}
									]
								},
								"description": "In Codat a Company is a person or an organization that buys goods or services from a company, sync for expenses uses these to track all income related activity against. You can either add the id of an existing customer from the accounting software or you can create a new customer."
							},
							"response": []
						},
						{
							"name": "GET Suppliers",
							"id": "8f4156ce-9cc7-417a-9c13-1e397ea77c5e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}companies/:companyId/data/suppliers?query=metadata.isDeleted=false",
									"host": [
										"{{baseUrl}}companies"
									],
									"path": [
										":companyId",
										"data",
										"suppliers"
									],
									"query": [
										{
											"key": "query",
											"value": "metadata.isDeleted=false"
										}
									],
									"variable": [
										{
											"key": "companyId",
											"value": "{{companyId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Supplier",
							"id": "31997a74-0fdf-4960-a8e7-46156a04c3bd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"supplierName\": \"{{$randomCompanyName}}\",\r\n  \"contactName\": \"{{$randomFirstName}}\",\r\n  \"emailAddress\": \"{{$randomEmail}}\",\r\n  \"phone\": \"{{$randomPhoneNumber}}\",\r\n  \"registrationNumber\": \"string\",\r\n  \"taxNumber\": \"string\",\r\n  \"status\": \"Active\",\r\n  \"modifiedDate\": \"{{$isoTimestamp}}\",\r\n  \"sourceModifiedDate\": \"{{$isoTimestamp}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}companies/:companyId/connections/:connectionId/push/suppliers",
									"host": [
										"{{baseUrl}}companies"
									],
									"path": [
										":companyId",
										"connections",
										":connectionId",
										"push",
										"suppliers"
									],
									"variable": [
										{
											"key": "companyId",
											"value": "{{companyId}}"
										},
										{
											"key": "connectionId",
											"value": "{{accountingConnectionId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Save Configuration",
							"id": "da6a2dcc-9b30-44d2-8da8-23c8369db41d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"companyId\": \"{{companyId}}\",\r\n    \"accountingSoftwareCompanyName\": null,\r\n    \"enabled\": false,\r\n    \"configured\": true,\r\n    \"schedule\": {\r\n        \"selectedFrequency\": \"Daily\",\r\n        \"frequencyOptions\": [\r\n            \"Daily\"\r\n        ],\r\n        \"startDate\": \"0001-01-01T00:00:00\",\r\n        \"syncHourUtc\": 0,\r\n        \"timeZoneIanaId\": null\r\n    },\r\n    \"configuration\": {\r\n        \"syncAsBankFeeds\": {\r\n            \"enableSync\": false,\r\n            \"selectedBankAccountId\": null,\r\n            \"bankAccountOptions\": []\r\n        },\r\n        \"syncAsExpenses\": {\r\n            \"enableSync\": true,\r\n            \"supplier\": {\r\n                \"selectedSupplierId\": \"124\",\r\n                \"supplierOptions\": []\r\n            },\r\n            \"customer\": {\r\n                \"selectedCustomerId\": \"140\",\r\n                \"customerOptions\": []\r\n            },\r\n            \"selectedBankAccountId\": \"89\",\r\n            \"bankAccountOptions\": []\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{expenseUrl}}companies/:companyId/config",
									"host": [
										"{{expenseUrl}}companies"
									],
									"path": [
										":companyId",
										"config"
									],
									"variable": [
										{
											"id": "1f5a6454-864e-4d86-9dac-550788c40420",
											"key": "companyId",
											"value": "{{companyId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get expense mapping options",
							"id": "3c428e17-ab34-4bdf-a0c1-ee4f6f064166",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{expenseUrl}}companies/:companyId/mappingoptions",
									"host": [
										"{{expenseUrl}}companies"
									],
									"path": [
										":companyId",
										"mappingoptions"
									],
									"variable": [
										{
											"id": "52e3d519-7b4a-4508-8a7f-21e14d10907d",
											"key": "companyId",
											"value": "{{companyId}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "d02ccc2d-400f-4462-a24f-a21d756c25e4"
				},
				{
					"name": "Datasets",
					"item": [
						{
							"name": "Create Expense Dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "db0e5006-e7a3-45d9-a51d-86ed77c2a5c6",
										"exec": [
											"var resp = JSON.parse(responseBody)\r",
											"\r",
											"pm.collectionVariables.set(\"datasetId\", resp.datasetId)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "541f8149-ae2b-4650-b158-256e308ab8ab",
										"exec": [
											"let uuid = require('uuid');\r",
											"pm.collectionVariables.set(\"transactionId1\", uuid.v4());\r",
											"pm.collectionVariables.set(\"transactionId2\", uuid.v4());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bd019ef9-9e7f-4a8f-a5b2-6564b273a8b0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": " {\r\n   \"items\": [\r\n     {\r\n       \"id\": \"{{transactionId1}}\",\r\n       \"type\": \"Payment\",\r\n       \"issueDate\": \"2023-01-02\",\r\n       \"dateApproved\": \"2023-01-02\",\r\n       \"currency\": \"GBP\",\r\n       \"lines\": [\r\n         {\r\n           \"netAmount\": -23.75,\r\n           \"taxAmount\": -4.75,\r\n           \"taxRateRef\": { \"id\": \"23_Bills\" },\r\n           \"accountRef\": { \"id\": \"88\" },\r\n           \"trackingRefs\": [\r\n             //{ \"id\": \"2f2498b9-f8cc-4985-b6ee-58ca2b32e3e6\" }\r\n           ]\r\n         }\r\n       ]\r\n     }\r\n   ]\r\n }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{expenseUrl}}companies/:companyId/data/expense-transactions",
									"host": [
										"{{expenseUrl}}companies"
									],
									"path": [
										":companyId",
										"data",
										"expense-transactions"
									],
									"variable": [
										{
											"id": "fc465499-52b9-4053-b150-377c187a062c",
											"key": "companyId",
											"value": "{{companyId}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "6547dabf-f95f-4de0-adbf-e2ac60728a13"
				},
				{
					"name": "Syncing Expenses",
					"item": [
						{
							"name": "Initiate Sync",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody)\r",
											"\r",
											"pm.collectionVariables.set(\"syncId\", resp.syncId)"
										],
										"type": "text/javascript",
										"id": "c06ff967-f900-4eb4-ba55-86725a60be6b"
									}
								}
							],
							"id": "e080e0e8-f34f-413a-be4f-504e7172fc5f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"datasetIds\": [\r\n     \"{{datasetId}}\"\r\n   ]\r\n }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{expenseUrl}}companies/:companyId/syncs",
									"host": [
										"{{expenseUrl}}companies"
									],
									"path": [
										":companyId",
										"syncs"
									],
									"variable": [
										{
											"id": "64ef30c7-cbf8-49cd-9625-2c295265064f",
											"key": "companyId",
											"value": "{{companyId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Sync Status",
							"id": "f86ff14b-9916-45ed-b265-fa919638d60f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{expenseUrl}}companies/:companyId/syncs/:syncId/status",
									"host": [
										"{{expenseUrl}}companies"
									],
									"path": [
										":companyId",
										"syncs",
										":syncId",
										"status"
									],
									"variable": [
										{
											"id": "8a402e21-6ab5-4652-a53d-31bae6864415",
											"key": "companyId",
											"value": "{{companyId}}"
										},
										{
											"id": "9ef1a5f8-049b-4655-bbac-ae9ca5d3d523",
											"key": "syncId",
											"value": "{{syncId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Sync Statuses",
							"id": "9c72f384-ead0-4f86-8ab8-602902888cef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{expenseUrl}}companies/:companyId/syncs/list/status",
									"host": [
										"{{expenseUrl}}companies"
									],
									"path": [
										":companyId",
										"syncs",
										"list",
										"status"
									],
									"variable": [
										{
											"id": "07fb7ffb-850b-44c2-b2e0-dc3f9b351a97",
											"key": "companyId",
											"value": "{{companyId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Transaction Status",
							"id": "0ecc8107-a890-450f-b8a0-a6c48015c309",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{expenseUrl}}companies/:companyId/syncs/:syncId/transactions",
									"host": [
										"{{expenseUrl}}companies"
									],
									"path": [
										":companyId",
										"syncs",
										":syncId",
										"transactions"
									],
									"variable": [
										{
											"id": "8cb09263-c334-454c-8d0e-9bc45ced4183",
											"key": "companyId",
											"value": "{{companyId}}"
										},
										{
											"id": "36546bad-73f4-41bd-9ff8-184bc53f96f7",
											"key": "syncId",
											"value": "{{syncId}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "9783943e-5d17-45ae-b992-b9f1c2cb2476"
				},
				{
					"name": "Upload Receipt",
					"id": "6d13e7b2-77d3-4763-9699-4dd43f3d6cf3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "multi-part",
									"type": "file",
									"src": "/C:/Users/JamesYorston/Downloads/cot_daily_syncs (1).png"
								}
							]
						},
						"url": {
							"raw": "{{expenseUrl}}companies/:companyId/syncs/:syncId/transactions/:transactionId/attachments",
							"host": [
								"{{expenseUrl}}companies"
							],
							"path": [
								":companyId",
								"syncs",
								":syncId",
								"transactions",
								":transactionId",
								"attachments"
							],
							"variable": [
								{
									"key": "companyId",
									"value": "{{companyId}}"
								},
								{
									"key": "syncId",
									"value": "{{syncId}}"
								},
								{
									"key": "transactionId",
									"value": "{{transactionId1}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "95fbcff6-4680-40b9-b003-1e721ddeedcf",
			"auth": {
				"type": "apikey",
				"apikey": {
					"value": "{{codat_api_key_base_64}}",
					"key": "Authorization"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "24988e62-caeb-4463-90c4-0f8db12c3804"
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "70734a3f-713e-4437-b07a-c782ee135f85"
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "52ccaf39-d912-4cbb-91d9-5e522569170c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "5dc8a0ce-370d-4fa1-a264-670b7a5a07a7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "a9ec9b0b-1833-4d15-af31-28f6a216ccd1",
			"key": "companyId",
			"value": "00000000-0000-0000-0000-000000000000"
		},
		{
			"id": "de7b0929-f5d7-4c58-a3a1-45782c99ec43",
			"key": "orderId",
			"value": ""
		},
		{
			"id": "9d0e39dd-1418-4d69-9971-3ac017f0c0e0",
			"key": "accountingConnectionId",
			"value": ""
		},
		{
			"id": "a95706eb-1024-494e-811a-456009a66e2f",
			"key": "commerceKey",
			"value": "lqai",
			"type": "string"
		},
		{
			"id": "a58cd64a-0b4e-488e-bca9-28164ab9601a",
			"key": "accountingKey",
			"value": "gbol",
			"type": "string"
		},
		{
			"id": "361b770a-5d2b-401e-9da4-564039bcc006",
			"key": "merchantName",
			"value": "SME Name or ID",
			"type": "string"
		},
		{
			"id": "7f70ee7d-72e2-42e0-9ce5-ff1dbf3d9f48",
			"key": "platformKey",
			"value": "mqjo",
			"type": "string"
		},
		{
			"id": "f900a7c2-f6e2-4e11-9201-3db5229745aa",
			"key": "connectionId",
			"value": "",
			"type": "string"
		},
		{
			"id": "c03d2fa3-1672-4cb0-b979-e7f9dbc52324",
			"key": "expenseUrl",
			"value": "https://expensesync-integration.codat.io/",
			"type": "string"
		},
		{
			"id": "effb2817-3ae0-4c6e-a7dd-4ec0643da1d8",
			"key": "baseUrl",
			"value": "https://api-integration.codat.io/",
			"type": "string"
		},
		{
			"id": "ecdfa47e-1a20-4e2c-9088-10e9c6feccf3",
			"key": "expenseConnectionId",
			"value": ""
		},
		{
			"id": "37cb1b9a-4c58-4ace-bdf0-294980443e88",
			"key": "datasetId",
			"value": "",
			"type": "string"
		},
		{
			"id": "d6ea778f-e421-4437-a6db-e9c0a9bbb1f3",
			"key": "syncId",
			"value": ""
		},
		{
			"id": "41695830-08ef-4e42-9d60-5ba1ba06caeb",
			"key": "transactionId",
			"value": ""
		},
		{
			"id": "e447afc2-42c9-4c2c-9e44-1666d0c3ee72",
			"key": "transactionId1",
			"value": ""
		},
		{
			"id": "820e666e-4e70-4d42-ac33-e77e35ef8ee4",
			"key": "transactionId2",
			"value": ""
		}
	]
}